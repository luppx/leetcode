{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            // 配置名称，将会在启动配置的下拉菜单中显示
            "name": "C++ Launch (GDB)", 
            // 配置类型，这里只能为cppdbg
            "type": "cppdbg",
            // 请求配置类型，可以为launch（启动）或attach（附加）
            "request": "launch", 
            "targetArchitecture": "x86",
            // 要进行调试的可执行文件的路径
            // "program": "${fileDirname}\\${fileBasenameNoExtension}.exe",
            "program": "${fileDirname}\\main.exe",
            // 程序调试时传递给程序的命令行参数，一般设为空即可
            "args": [], 
            // 设为true时程序将暂停在程序入口处
            "stopAtEntry": false,
            // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录
            "cwd": "${workspaceRoot}",
            "environment": [],
            // 调试时是否显示控制台窗口
            "externalConsole": false,
            //"internalConsoleOptions": "neverOpen", // 如果不设为neverOpen，调试时会跳到“调试控制台”选项卡，你应该不需要对gdb手动输命令吧？
            // 指定连接的调试器，可以为gdb或lldb。但目前lldb在windows下没有预编译好的版本
            "MIMode": "gdb",
            // gdb调试器路径，这里选择TDM-GCC安装目录下的gdb，Windows下后缀不能省略，Linux下则去掉
            "miDebuggerPath": "D:\\TDM-GCC-64\\bin\\gdb64.exe",
            "setupCommands": [
                {
                    "description": "为 gdb 启用整齐打印",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc。与tasks.json的label相对应
            "preLaunchTask": "g++"
        }
    ]
}